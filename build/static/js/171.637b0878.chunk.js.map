{"version":3,"sources":["views/apps/historycall/CallHistory.js","../node_modules/reactstrap/es/Input.js"],"names":["i","CallHistory","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","Sid","userid","fullname","className","email","To","StartTime","split","Duration","deductedAmt","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","props","match","id","astroId","localStorage","getItem","axiosConfig","get","then","response","console","log","reverse","error","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","render","history","onClick","push","tag","length","size","right","placeholder","onChange","e","target","value","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","_excluded","propTypes","children","PropTypes","node","type","string","oneOfType","number","bsSize","valid","bool","invalid","tagPropType","innerRef","object","func","plaintext","addon","cssModule","Input","_React$Component","_this","call","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","_this$props","attributes","_objectWithoutPropertiesLoose","checkInput","indexOf","isNotaNumber","RegExp","Tag","formControlClass","test","warnOnce","classes","mapToCssModules","classNames","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/171.637b0878.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\nclass CallHistory extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Caller Sid\",\r\n        field: \"callerid\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data?.Sid}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Name\",\r\n        field: \"firstname\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data?.userid?.fullname}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"email\t\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.userid?.email}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Mobile No.\",\r\n        field: \"mobile\t\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.To}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Date\",\r\n        field: \"date\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.StartTime.split(\" \")[0]}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Time\",\r\n        field: \"time\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data?.StartTime.split(\" \")[1]}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Duration\",\r\n        field: \"Duration\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data?.Duration}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Amount Deducted\",\r\n        field: \"Amount\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data?.userid?.deductedAmt}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"dateofregister\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>Completed</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    let astroId = localStorage.getItem(\"astroId\");\r\n    // console.log(\"astroId\", astroId);\r\n    await axiosConfig\r\n      .get(`/user/astroCallHistory/${astroId}`)\r\n      .then((response) => {\r\n        let rowData = response.data.data;\r\n        console.log(rowData);\r\n        this.setState({ rowData: rowData.reverse() });\r\n      });\r\n\r\n    await axiosConfig.get(\"/admin/allcustomer\").then((response) => {\r\n      let rowData = response.data.data;\r\n    });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/admin/delcustomer/${id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      // console.log(rowData),\r\n      <div>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Call Histroy\"\r\n          breadCrumbParent=\"Home\"\r\n          breadCrumbActive=\"Call Histroy \"\r\n        />\r\n\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\"></Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                    Call Histroy\r\n                  </h1>\r\n                </Col>\r\n                <Col>\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Button\r\n                        className=\" btn btn-success float-right\"\r\n                        onClick={() => history.push(\"/app/user/addUser\")}\r\n                      >\r\n                        Add User\r\n                      </Button>\r\n                    )}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CallHistory;\r\n\r\n// import React from \"react\";\r\n// import {\r\n//   Card,\r\n//   CardBody,\r\n//   Input,\r\n//   Row,\r\n//   Col,\r\n//   Button,\r\n//   UncontrolledDropdown,\r\n//   DropdownMenu,\r\n//   DropdownItem,\r\n//   DropdownToggle,\r\n// } from \"reactstrap\";\r\n// // import axiosConfig from \"../../../axiosConfig\";\r\n// import axios from \"axios\";\r\n// import { ContextLayout } from \"../../../utility/context/Layout\";\r\n// import { AgGridReact } from \"ag-grid-react\";\r\n// import { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n// //import classnames from \"classnames\";\r\n// import \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\n// import \"../../../assets/scss/pages/users.scss\";\r\n// import { Route } from \"react-router-dom\";\r\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n// import axiosConfig from \"../../../axiosConfig\";\r\n// class CallHistory extends React.Component {\r\n//   state = {\r\n//     rowData: [],\r\n//     paginationPageSize: 20,\r\n//     currenPageSize: \"\",\r\n//     getPageSize: \"\",\r\n//     defaultColDef: {\r\n//       sortable: true,\r\n//       editable: true,\r\n//       resizable: true,\r\n//       suppressMenu: true,\r\n//     },\r\n//     columnDefs: [\r\n//       {\r\n//         headerName: \"S.No\",\r\n//         valueGetter: \"node.rowIndex + 1\",\r\n//         field: \"node.rowIndex + 1\",\r\n//         width: 100,\r\n//         filter: true,\r\n//         // checkboxSelection: true,\r\n//         // headerCheckboxSelectionFilteredOnly: true,\r\n//         // headerCheckboxSelection: true,\r\n//       },\r\n\r\n//       {\r\n//         headerName: \"Caller ID\",\r\n//         field: \"callerid\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>\r\n//                 {params.data.firstname} {params.data.lastname}\r\n//               </span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n\r\n//       {\r\n//         headerName: \"Name\",\r\n//         field: \"firstname\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>\r\n//                 {params.data.firstname} {params.data.lastname}\r\n//               </span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n\r\n//       // {\r\n//       //   headerName: \"Email\",\r\n//       //   field: \"email\t\",\r\n//       //   filter: true,\r\n//       //   width: 200,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n//       //         <span>{params.data.email}</span>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       // {\r\n//       //   headerName: \"Mobile No.\",\r\n//       //   field: \"mobile\t\",\r\n//       //   filter: true,\r\n//       //   width: 200,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n//       //         <span>{params.data.email}</span>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       {\r\n//         headerName: \"Date\",\r\n//         field: \"date\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.email}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"Time\",\r\n//         field: \"time\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>{params.data.mobile}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"Duration\",\r\n//         field: \"duration\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>{params.data.mobile}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"Amount\",\r\n//         field: \"amount\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>{params.data.mobile}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n\r\n//       {\r\n//         headerName: \"Status\",\r\n//         field: \"dateofregister\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>{params.data.mobile}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n\r\n//       {\r\n//         headerName: \"Actions\",\r\n//         field: \"sortorder\",\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"actions cursor-pointer\">\r\n//               <Route\r\n//                 render={({ history }) => (\r\n//                   <Eye\r\n//                     className=\"mr-50\"\r\n//                     size=\"25px\"\r\n//                     color=\"green\"\r\n//                     onClick={() =>\r\n//                       history.push(\r\n//                         `/app/userride/viewUserRide/${params.data._id}`\r\n//                       )\r\n//                     }\r\n//                   />\r\n//                 )}\r\n//               />\r\n//               <Route\r\n//                 render={({ history }) => (\r\n//                   <Edit\r\n//                     className=\"mr-50\"\r\n//                     size=\"25px\"\r\n//                     color=\"blue\"\r\n//                     onClick={() => history.push(\"/app/userride/editUserRide\")}\r\n//                   />\r\n//                 )}\r\n//               />\r\n//               <Trash2\r\n//                 className=\"mr-50\"\r\n//                 size=\"25px\"\r\n//                 color=\"red\"\r\n//                 onClick={() => {\r\n//                   let selectedData = this.gridApi.getSelectedRows();\r\n//                   this.runthisfunction(params.data._id);\r\n//                   this.gridApi.updateRowData({ remove: selectedData });\r\n//                 }}\r\n//               />\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//     ],\r\n//   };\r\n//   async componentDidMount() {\r\n//     let { id } = this.props.match.params;\r\n\r\n//     // await axiosConfig.get(`/user/view_onecust/${id}`).then((response) => {\r\n//     //   let rowData = response.data.data;\r\n//     //   console.log(rowData);\r\n//     //   this.setState({ rowData });\r\n//     // });\r\n\r\n//     await axiosConfig.get(\"/user/callHistory\").then((response) => {\r\n//       let rowData = response.data.data;\r\n//       console.log(rowData);\r\n//       this.setState({ rowData });\r\n//     });\r\n//   }\r\n\r\n//   async runthisfunction(id) {\r\n//     console.log(id);\r\n//     await axiosConfig.get(`/admin/delcustomer/${id}`).then(\r\n//       (response) => {\r\n//         console.log(response);\r\n//       },\r\n//       (error) => {\r\n//         console.log(error);\r\n//       }\r\n//     );\r\n//   }\r\n//   onGridReady = (params) => {\r\n//     this.gridApi = params.api;\r\n//     this.gridColumnApi = params.columnApi;\r\n//     this.setState({\r\n//       currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n//       getPageSize: this.gridApi.paginationGetPageSize(),\r\n//       totalPages: this.gridApi.paginationGetTotalPages(),\r\n//     });\r\n//   };\r\n//   updateSearchQuery = (val) => {\r\n//     this.gridApi.setQuickFilter(val);\r\n//   };\r\n//   filterSize = (val) => {\r\n//     if (this.gridApi) {\r\n//       this.gridApi.paginationSetPageSize(Number(val));\r\n//       this.setState({\r\n//         currenPageSize: val,\r\n//         getPageSize: val,\r\n//       });\r\n//     }\r\n//   };\r\n//   render() {\r\n//     const { rowData, columnDefs, defaultColDef } = this.state;\r\n//     return (\r\n//       <div>\r\n//         <Breadcrumbs\r\n//           breadCrumbTitle=\"Call Histroy\"\r\n//           breadCrumbParent=\"Home\"\r\n//           breadCrumbActive=\"Call Histroy \"\r\n//         />\r\n\r\n//         <Row className=\"app-user-list\">\r\n//           <Col sm=\"12\"></Col>\r\n//           <Col sm=\"12\">\r\n//             <Card>\r\n//               <Row className=\"m-2\">\r\n//                 <Col>\r\n//                   <h1 sm=\"6\" className=\"float-left\">\r\n//                     Call Histroy\r\n//                   </h1>\r\n//                 </Col>\r\n//                 <Col>\r\n//                   <Route\r\n//                     render={({ history }) => (\r\n//                       <Button\r\n//                         className=\" btn btn-success float-right\"\r\n//                         onClick={() => history.push(\"/app/user/addUser\")}\r\n//                       >\r\n//                         Add User\r\n//                       </Button>\r\n//                     )}\r\n//                   />\r\n//                 </Col>\r\n//               </Row>\r\n//               <CardBody>\r\n//                 {this.state.rowData === null ? null : (\r\n//                   <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n//                     <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n//                       <div className=\"mb-1\">\r\n//                         <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n//                           <DropdownToggle tag=\"div\">\r\n//                             {this.gridApi\r\n//                               ? this.state.currenPageSize\r\n//                               : \"\" * this.state.getPageSize -\r\n//                                 (this.state.getPageSize - 1)}{\" \"}\r\n//                             -{\" \"}\r\n//                             {this.state.rowData.length -\r\n//                               this.state.currenPageSize *\r\n//                                 this.state.getPageSize >\r\n//                             0\r\n//                               ? this.state.currenPageSize *\r\n//                                 this.state.getPageSize\r\n//                               : this.state.rowData.length}{\" \"}\r\n//                             of {this.state.rowData.length}\r\n//                             <ChevronDown className=\"ml-50\" size={15} />\r\n//                           </DropdownToggle>\r\n//                           <DropdownMenu right>\r\n//                             <DropdownItem\r\n//                               tag=\"div\"\r\n//                               onClick={() => this.filterSize(20)}\r\n//                             >\r\n//                               20\r\n//                             </DropdownItem>\r\n//                             <DropdownItem\r\n//                               tag=\"div\"\r\n//                               onClick={() => this.filterSize(50)}\r\n//                             >\r\n//                               50\r\n//                             </DropdownItem>\r\n//                             <DropdownItem\r\n//                               tag=\"div\"\r\n//                               onClick={() => this.filterSize(100)}\r\n//                             >\r\n//                               100\r\n//                             </DropdownItem>\r\n//                             <DropdownItem\r\n//                               tag=\"div\"\r\n//                               onClick={() => this.filterSize(134)}\r\n//                             >\r\n//                               134\r\n//                             </DropdownItem>\r\n//                           </DropdownMenu>\r\n//                         </UncontrolledDropdown>\r\n//                       </div>\r\n//                       <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n//                         <div className=\"table-input mr-1\">\r\n//                           <Input\r\n//                             placeholder=\"search...\"\r\n//                             onChange={(e) =>\r\n//                               this.updateSearchQuery(e.target.value)\r\n//                             }\r\n//                             value={this.state.value}\r\n//                           />\r\n//                         </div>\r\n//                         <div className=\"export-btn\">\r\n//                           <Button.Ripple\r\n//                             color=\"primary\"\r\n//                             onClick={() => this.gridApi.exportDataAsCsv()}\r\n//                           >\r\n//                             Export as CSV\r\n//                           </Button.Ripple>\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n//                     <ContextLayout.Consumer>\r\n//                       {(context) => (\r\n//                         <AgGridReact\r\n//                           gridOptions={{}}\r\n//                           rowSelection=\"multiple\"\r\n//                           defaultColDef={defaultColDef}\r\n//                           columnDefs={columnDefs}\r\n//                           rowData={rowData}\r\n//                           onGridReady={this.onGridReady}\r\n//                           colResizeDefault={\"shift\"}\r\n//                           animateRows={true}\r\n//                           floatingFilter={false}\r\n//                           pagination={true}\r\n//                           paginationPageSize={this.state.paginationPageSize}\r\n//                           pivotPanelShow=\"always\"\r\n//                           enableRtl={context.state.direction === \"rtl\"}\r\n//                         />\r\n//                       )}\r\n//                     </ContextLayout.Consumer>\r\n//                   </div>\r\n//                 )}\r\n//               </CardBody>\r\n//             </Card>\r\n//           </Col>\r\n//         </Row>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default CallHistory;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"];\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;"],"sourceRoot":""}